{"version":3,"sources":["main.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AATA,IAAM,mBAAmB,SAAnB,gBAAmB,CAAC,IAAD,EAAO,SAAP,EAAqB;AAC5C,MAAI,aAAa,KAAb,CADwC;AAE5C,MAAI,UAAU;AACZ,UAAM,MAAN;AACA,cAAU,oBAAM;AACd,mBAAa,IAAb,CADc;AAEd,WAAK,SAAL,CAAe,OAAO,GAAP,EAAf,EAFc;KAAN;GAFR,CAFwC;AAS5C,MAAI,SAAS,IAAI,UAAJ,CAAe,SAAf,EAA0B,OAA1B,EAAmC,KAAK,SAAL,EAAnC,CAAT,CATwC;AAU5C,OAAK,EAAL,CAAQ,QAAR,EAAkB,aAAK;AACrB,QAAI,cAAc,KAAd,EAAqB;AACvB,aAAO,GAAP,CAAW,KAAK,SAAL,EAAX,EADuB;KAAzB,MAEO;AACL,mBAAa,KAAb,CADK;KAFP;GADgB,CAAlB,CAV4C;CAArB;;AAmBzB,SAAS,KAAT,CAAe,EAAf,EAAmB;AACjB,MAAI,SAAS,UAAT,IAAuB,SAAvB,EAAiC;AACnC,SADmC;GAArC,MAEO;AACL,aAAS,gBAAT,CAA0B,kBAA1B,EAA8C,EAA9C,EADK;GAFP;CADF;;AAQA,IAAM,mBAAmB,SAAnB,gBAAmB,CAAC,IAAD,EAAO,IAAP,EAAgB;;AAEvC,MAAI,cAAc,mBAAd,CAFmC;;AAIvC,QAAM,YAAM;AACV,QAAI,KAAM,SAAS,cAAT,CAAwB,WAAxB,CAAN,CADM;AAEV,QAAI,EAAJ,EAAQ;AACN,SAAG,MAAH,GAAY,WAAZ,CAAwB,EAAxB,EADM;KAAR;;AAIA,QAAI,MAAM,SAAS,aAAT,CAAuB,MAAvB,CAAN,CANM;AAOV,QAAI,YAAJ,CAAiB,MAAjB,EAAwB,wEAAxB,EAPU;AAQV,QAAI,YAAJ,CAAiB,KAAjB,EAAwB,YAAxB,EARU;AASV,aAAS,IAAT,CAAc,WAAd,CAA0B,GAA1B,EATU;;AAWV,QAAI,mBAAmB,SAAS,aAAT,CAAuB,QAAvB,CAAnB,CAXM;AAYV,qBAAiB,YAAjB,CAA8B,KAA9B,EAAoC,uEAApC,EAZU;AAaV,aAAS,IAAT,CAAc,WAAd,CAA0B,gBAA1B,EAbU;;AAeV,QAAI,eAAe,SAAS,aAAT,CAAuB,KAAvB,CAAf,CAfM;AAgBV,iBAAa,YAAb,CAA0B,IAA1B,EAAgC,WAAhC,EAhBU;AAiBV,iBAAa,YAAb,CAA0B,OAA1B,EAAmC,2DAAnC,EAjBU;AAkBV,aAAS,IAAT,CAAc,WAAd,CAA0B,YAA1B,EAlBU;GAAN,CAAN;;;AAJuC,MA2BnC,WAAW,YAAY,YAAY;AACrC,QAAI,OAAO,UAAP,KAAsB,WAAtB,EAAmC;AACrC,oBAAc,QAAd,EADqC;AAErC,UAAI,YAAY,SAAS,cAAT,CAAwB,WAAxB,CAAZ,CAFiC;AAGrC,uBAAiB,IAAjB,EAAuB,SAAvB,EAHqC;KAAvC;GADyB,EAMxB,GANY,CAAX;;;AA3BmC,MAoCnC,UAAU,OAAO,GAAP,EAAY;AACxB,WAAO,GAAP,CAAW,OAAX,CAAmB,gBAAQ;AACzB,UAAI,KAAK,SAAS,cAAT,CAAwB,YAAxB,CAAL,CADqB;AAEzB,SAAG,UAAH,CAAc,WAAd,CAA0B,EAA1B,EAFyB;KAAR,CAAnB,CADwB;GAA1B;CApCuB;;AA4CzB,IAAI,MAAJ,EAAY;AACV,SAAO,gBAAP,GAA0B,gBAA1B,CADU;CAAZ;;AAIA,OAAO,OAAP,GAAiB,gBAAjB","file":"main.js","sourcesContent":["const createJsonEditor = (tree, container) => {\n  let ignoreNext = false\n  let options = {\n    mode: 'form',\n    onChange: () => {\n      ignoreNext = true\n      tree.deepMerge(editor.get())\n    }\n  }\n  let editor = new JSONEditor(container, options, tree.serialize())\n  tree.on('update', e => {\n    if (ignoreNext == false) {\n      editor.set(tree.serialize())\n    } else {\n      ignoreNext = false\n    }\n  })\n}\n\nfunction ready(fn) {\n  if (document.readyState != 'loading'){\n    fn();\n  } else {\n    document.addEventListener('DOMContentLoaded', fn);\n  }\n}\n\nconst baobabJsonEditor = (tree, opts) => {\n\n  var containerId = 'baobab-jsoneditor'\n\n  ready(() => {\n    var el =  document.getElementById(containerId)\n    if (el) {\n      el.parent().removeChild(el)\n    }\n\n    var css = document.createElement('link')\n    css.setAttribute('href','https://cdnjs.cloudflare.com/ajax/libs/jsoneditor/5.1.5/jsoneditor.css')\n    css.setAttribute('rel', 'stylesheet')\n    document.head.appendChild(css)\n\n    var jsonEditorDepsJs = document.createElement('script')\n    jsonEditorDepsJs.setAttribute('src','https://cdnjs.cloudflare.com/ajax/libs/jsoneditor/5.1.5/jsoneditor.js')\n    document.head.appendChild(jsonEditorDepsJs)\n\n    var jsonEditorEl = document.createElement('div')\n    jsonEditorEl.setAttribute('id', containerId)\n    jsonEditorEl.setAttribute('style', 'width: 400px; position: absolute; top: 10px; right: 10px;')\n    document.body.appendChild(jsonEditorEl)\n\n  })\n\n  // Wait for JSONEditor to load\n  let interval = setInterval(function () {\n    if (typeof JSONEditor !== 'undefined') {\n      clearInterval(interval)\n      var container = document.getElementById(containerId)\n      createJsonEditor(tree, container)\n    }\n  }, 300)\n\n  // Module dispose logic\n  if (module && module.hot) {\n    module.hot.dispose(data => {\n      var el = document.getElementById('jsoneditor')\n      el.parentNode.removeChild(el)\n    })\n  }\n}\n\nif (window) {\n  window.baobabJsonEditor = baobabJsonEditor\n}\n\nmodule.exports = baobabJsonEditor\n"],"sourceRoot":"/source/"}